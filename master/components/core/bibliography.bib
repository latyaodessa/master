
@MISC{cloudify,
  author =       {GigaSpaces Technologies},
  title =        {Clodify},
  howpublished = {[online], \url{http://docs.getcloudify.org/3.4.1/intro/what-is-cloudify/}, last
  visited January 2018},
  year =         {2017},
  source =       {\url{http://docs.getcloudify.org/3.4.1/intro/what-is-cloudify/}, last
  viewed January 2018},
}

@article{openstack,
  title={OpenStack: toward an open-source solution for cloud computing},
  author={Sefraoui, Omar and Aissaoui, Mohammed and Eleuldj, Mohsine},
  journal={International Journal of Computer Applications},
  volume={55},
  number={3},
  year={2012},
  publisher={Foundation of Computer Science}
}

@article{docker,
  title={Docker: lightweight linux containers for consistent development and deployment},
  author={Merkel, Dirk},
  journal={Linux Journal},
  volume={2014},
  number={239},
  pages={2},
  year={2014},
  publisher={Belltown Media}
}

@Article{Walraven2014,
author="Walraven, Stefan
and Truyen, Eddy
and Joosen, Wouter",
title="Comparing PaaS offerings in light of SaaS development",
journal="Computing",
year="2014",
month="Aug",
day="01",
volume="96",
number="8",
pages="669--724",
abstract="Software vendors increasingly aim to apply the Software-as-a-Service (SaaS) delivery model instead of the traditional on-premise model. Platforms-as-a-Service (PaaS), such as Google App Engine and Windows Azure, deliver a computing platform and solution stack as a service, but they also aim to facilitate the development of cloud applications (SaaS). Such PaaS offerings should enable third parties to build and deliver multi-tenant SaaS applications while shielding the complexity of the underpinning middleware and infrastructure. This paper compares, on the basis of a practical case study, three different and representative PaaS platforms with respect to their support for SaaS application development. We have reengineered an on-premise enterprise application into a SaaS application and we have subsequently deployed it in three PaaS-based cloud environments. We have investigated the following qualities of the PaaS platforms from the perspective of SaaS development: portability of the application code base, available support for creating and managing multi-tenant-aware applications, and quality of the tool support.",
issn="1436-5057",
doi="10.1007/s00607-013-0346-9",
url="https://doi.org/10.1007/s00607-013-0346-9"
}

@misc{ wiki:vitrage,
  title = "What is {V}itrage?  --- {W}ikipedia{,} The {F}ree {E}ncyclopedia",
  year = "2016",
  url = "https://wiki.openstack.org/wiki/Vitrage"}

@InProceedings{images,
author="Vakanas, Lenos
and Sotiriadis, Stelios
and Petrakis, Euripides G. M.",
editor="Pop, Florin
and Potop-Butucaru, Maria",
title="Implementing the Cloud Software to Data Approach for OpenStack Environments",
booktitle="Adaptive Resource Management and Scheduling for Cloud Computing",
year="2015",
publisher="Springer International Publishing",
address="Cham",
pages="103--118",
abstract="Cloud computing offers development platforms with many benefits such as low cost application development and deployment along with minimization of maintenance and upgrades. Despite the technologys numerous advantages, health care and other application fields related with sensitive and confidential information have been reluctant to seize its offerings. This is because of the requirement for data processing data on remote cloud datacenters and therefore the transferring of sensitive data over the Internet. A solution to this problem is the reverse cloud approach that allows software to be transferred near to the data source and to be instantiated into a new cloud environment in order to eliminate the problems of processing sensitive data remotely. To achieve this we developed an innovative software to data service that allows virtual machines in the form of running instances or images to be migrated between OpenStack environments. Further, the service allows easily reconfiguration (regarding hardware features) along with monitoring and calculating of virtual machine use in the OpenStack federation.",
isbn="978-3-319-28448-4"
}



@Inbook{neutron,
author="James Denton",
title="Learning OpenStack Networking (Neutron)",
year="2014",
publisher="Packt Publishing",
isbn="978-1783983308",
url="https://www.amazon.com/Learning-OpenStack-Networking-Neutron-Denton/dp/1783983302"
}

@Inbook{Markelov2016,
author="Markelov, Andrey",
title="OpenStack Compute",
bookTitle="Certified OpenStack Administrator Study Guide ",
year="2016",
publisher="Apress",
address="Berkeley, CA",
pages="65--86",
abstract="This chapter covers 15{\%} of the Certified OpenStack Administrator exam requirements.",
isbn="978-1-4842-2125-9",
doi="10.1007/978-1-4842-2125-9_6",
url="https://doi.org/10.1007/978-1-4842-2125-9_6"
}

@InProceedings{frs_4,
author="Li, Feng-Lin
and Horkoff, Jennifer
and Borgida, Alexander
and Guizzardi, Giancarlo
and Liu, Lin
and Mylopoulos, John",
editor="Fricker, Samuel A.
and Schneider, Kurt",
title="From Stakeholder Requirements to Formal Specifications Through Refinement",
booktitle="Requirements Engineering: Foundation for Software Quality",
year="2015",
publisher="Springer International Publishing",
address="Cham",
abstract="[Context and motivation] Stakeholder requirements are notoriously informal, vague, ambiguous and often unattainable. The requirements engineering problem is to formalize these requirements and then transform them through a systematic process into a formal specification that can be handed over to designers for downstream development. [Question/problem] This paper proposes a framework for transforming informal requirements to formal ones, and then to a specification. [Principal ideas/results] The framework consists of an ontology of requirements, a formal requirements modeling language for representing both functional and non-functional requirements, as well as a rich set of refinement operators whereby requirements are incrementally transformed into a formal, practically satisfiable and measurable specification. [Contributions] Our proposal includes a systematic, tool-supported methodology for conducting this transformation. For evaluation, we have applied our framework to a public requirements dataset. The results of our evaluation suggest that our ontology and modeling language are adequate for capturing requirements, and our methodology is effective in handling requirements in practice.",
isbn="978-3-319-16101-3"
}



@misc{ wiki:frs,
  title = "Systems and software engineering -- Vocabulary",
  year = "2010",
  url = "https://en.wikipedia.org/wiki/Functional_specification"}

@InProceedings{frs_3,
author="Benjamin Weyers and Judy Bowen and Alan Dix and Philippe Palanque",
title="The Handbook of Formal Methods in Human-Computer Interaction",
booktitle="The Handbook of Formal Methods in Human-Computer Interaction",
year="2017",
publisher="Springer International Publishing",
address="Cham",
isbn="978-3-319-51838-1"
}

@InProceedings{frs_2,
author="Trudel, S",
title="Software engineering -- COSMIC: a functional size measurement method",
booktitle="Human-Computer Interaction. Theory, Design, Development and Practice ",
year="2012",
publisher="Université du Québec",
address="Cham",
isbn="19761"
}




@InProceedings{frs_1,
author="Goubali, Olga
and Girard, Patrick
and Guittet, Laurent
and Bignon, Alain
and Kesraoui, Djamal
and Berruet, Pascal
and Bouillon, Jean-Fr{\'e}d{\'e}ric",
editor="Kurosu, Masaaki",
title="Designing Functional Specifications for Complex Systems",
booktitle="Human-Computer Interaction. Theory, Design, Development and Practice ",
year="2016",
publisher="Springer International Publishing",
address="Cham",
pages="166--177",
abstract="For designing complex and sociotechnical (System that strongly interact with humans (e.g., a ship is a large sociotechnical system).) systems, designers are in charge of the functional specification because they have an operational expert knowledge. However, these experts do not usually master the programming knowledge of those who design supervision systems. Complex and sociotechnical systems include supervision systems which comprise monitoring interfaces and associated control codes. In this paper we propose an approach that facilitates functional specification of supervision systems. This approach aims at exploiting Example Based Programming (EBP) to propose a specification tool, which contains a generalization module and an interface generation module. Our tool allows experts who are acting as non-professional software developers to describe high level system functional services from elementary services. These functional services contain elementary interactions and configuration data. Thus, the expert, involved in coding, avoids a lot of errors related to the interpretation of the functional specifications. Our aim is to capture expert knowledge on the system being designed in order to have verified and validated functional specifications, without having to train experts in formal methods.",
isbn="978-3-319-39510-4"
}



@misc{alert_send,
  title = "SENDING ALERTS --- Prometheus",
  author = "Matt T. Proud, Julius Volz.",
  year = "2017",
  url = "https://prometheus.io/docs/alerting/clients/",
  note = "[Online; accessed 2017]"
}

@misc{alert_overview,
  title = "OVERVIEW. What is Prometheus? --- Prometheus",
  author = "Matt T. Proud, Julius Volz.",
  year = "2017",
  url = "https://prometheus.io/docs/introduction/overview/",
  note = "[Online; accessed 2017]"
}

@InProceedings{nagios,
author="Anusas-amornkul, Tanapat
and Sangrat, Sirasit",
editor="Younas, Muhammad
and Awan, Irfan
and Holubova, Irena",
title="Linux Server Monitoring and Self-healing System Using Nagios",
booktitle="Mobile Web and Intelligent Information Systems",
year="2017",
publisher="Springer International Publishing",
address="Cham",
pages="290--302",
abstract="In an administrator perspective, a system repair is a tedious work because a server can be down any time, even at night. In addition, it takes some time to repair and bring the server back online. Therefore, a self-healing server is needed to decrease workload of an administrator. Nagios is open source monitoring tools and is normally used for monitoring networks, servers or applications. In this work, a self-healing function in Nagios is proposed in order to automatically solve Linux server problems. Nagios is used for both monitoring and solving problems in Apache web servers and Oracle database servers, which were analyzed using a root cause analysis. Two scenarios, a practical scenario and a simulated problem scenario, are tested with number of corrections and time to solve problems as performance metrics. The experimental results showed that the time to solve problems using self-healing approach for Apache web servers was improved 31.42{\%} and that for Oracle database servers was improved 40.40{\%} comparing with manual solving approach.",
isbn="978-3-319-65515-4"
}



@InProceedings{alert_book,
author="Tai, Stefan
and Rouvellou, Isabelle",
editor="Sventek, Joseph
and Coulson, Geoffrey",
title="Strategies for Integrating Messaging and Distributed Object Transactions",
booktitle="Middleware 2000",
year="2000",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="308--330",
abstract="Messaging, and distributed transactions, describe two important models for building enterprise software systems. Distributed object middleware aims to support both models by providing messaging and transaction services. But while the concept of distributed object transactions is well-understood, support for messaging in distributed object environments is still in its early stages, and not nearly as readily perceived. Integrating messaging into distributed object environments, and in particular with distributed object transactions, describes a novel and complex software design problem. This paper details this problem, presenting first results from our project of developing a messaging and transaction integration facility. The first contribution of this paper is a comprehensive messaging classification framework, which defines messaging concepts and terminology, and enables us to compare different messaging architectures. Second, we analyze sample messaging middleware using this framework, and identify the architectural messaging styles that they induce. Third, we derive four different strategies for integrating messaging and distributed object transactions. We discuss each of these integration strategies, and outline the open research issues that need to be solved. Overall, this paper advances our understanding of the motivation for, the problems of, the current state-of-the-art in, and future models for integrating messaging and distributed object transactions.",
isbn="978-3-540-45559-2"
}


@misc{ mobile_resolution,
  title = "HOW MOBILE WEB TRAFFIC HAS AFFECTED SCREEN RESOLUTION --- Spindogs",
  author = "Dave Morgan",
  year = "2017",
  url = "https://www.spindogs.co.uk/blog/2017/09/21/how-mobile-web-traffic-has-affected-screen-resolution/",
  note = "[Online; accessed 21-September-2017]"
}


@misc{ wiki:typeface,
  title = "Typeface --- {W}ikipedia{,} The Free Encyclopedia",
  year = "2016",
  url = "https://en.wikipedia.org/wiki/Typeface",
  note = "[Online; accessed 20-December-2016]"
}

@InProceedings{responsive_book,
author="Zeng, Yujing
and Gao, Jie
and Wu, Chunsong",
editor="Rau, P. L. Patrick",
title="Responsive Web Design and Its Use by an E-Commerce Website",
booktitle="Cross-Cultural Design",
year="2014",
publisher="Springer International Publishing",
address="Cham",
pages="509--519",
abstract="Responsible architecture design is believed to be the most effective answer to the incompatibility problem of webpages across devices with varying sizes and resolutions. Online shopping behavior is cross-device and continuous; therefore, we believe that it is also important to explore and discuss how to provide a fluent and consistent user experience for the same webpage across various devices (other than simply using the fluid grid technique to maintain cross device compatibility). Inspired by the fluency theory, we assume that the fluency of processing webpages on different devices affects a user's responsive web experience. In this paper, a case study of etao.com was performed to explore how to improve user experience fluency with responsive web design on mobile phones. The study consisted of two experiments: a PC test and a mobile phone test. The PC test was designed to understand the interactions between the users and the information content on etao.com (desktop version), which could facilitate the identification of user preferences and expectations and guide the design layout of the responsive webpage on mobile phones. During the mobile phone test, we examined the responsive webpage, which was designed according to users' preferences and expectations, to determine whether this type of layout could be approved by users. The results showed that users rated the new version of the responsive webpage higher than the traditional responsive page, which was designed by using proportion-based fluid grid technology alone.",
isbn="978-3-319-07308-8"
}

@InProceedings{dashboards_book,
author="Patern{\`o}, Fabio
and Santoro, Carmen
and Scorcia, Antonio",
editor="Forbrig, Peter
and Patern{\`o}, Fabio",
title="Preserving Rich User Interface State in Web Applications across Various Platforms",
booktitle="Engineering Interactive Systems",
year="2008",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="255--262",
abstract="This paper aims to provide thorough discussion of the aspects that compose the state of a Web application user interface, and show how it can be preserved across multiple devices with different interaction resources when the user interface dynamically migrates. The approach proposed exploits a migration server along with logical user interface descriptions.",
isbn="978-3-540-85992-5"
}



@Inbook{Cagle2005,
author="Cagle, Kurt",
title="The Foundations of SVG",
bookTitle="Visualizing Information Using SVG and X3D",
year="2005",
publisher="Springer London",
address="London",
pages="21--62",
isbn="978-1-84628-084-9",
doi="10.1007/1-84628-084-2_2",
url="https://doi.org/10.1007/1-84628-084-2_2"
}



@InProceedings{intelligent_support,
author="Mac{\'i}as, Jos{\'e} A.
and Patern{\`o}, Fabio",
editor="Gulliksen, Jan
and Harning, Morton Borup
and Palanque, Philippe
and van der Veer, Gerrit C.
and Wesson, Janet",
title="Intelligent Support for End-User Web Interface Customization",
booktitle="Engineering Interactive Systems",
year="2008",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="303--320",
abstract="Nowadays, while the number of users of interactive software steadily increase, new applications and systems appear and provide further complexity. An example of such systems is represented by multi-device applications, where the user can interact with the system through different platforms. However, providing end-users with real capabilities to author user interfaces is still a problematic issue, which is beyond the ability of most end-users today. In this paper, we present an approach intended to enable users to modify Web interfaces easily, considering implicit user intents inferred from example interface modifications carried out by the user. We discuss the design issues involved in the implementation of such an intelligent approach, also reporting on some experimental results obtained from a user test.",
isbn="978-3-540-92698-6"
}


@Inbook{Martinez2017,
author="Martinez, Jabier
and Sottet, Jean-S{\'e}bastien
and Frey, Alfonso Garc{\'i}a
and Ziadi, Tewfik
and Bissyand{\'e}, Tegawend{\'e}
and Vanderdonckt, Jean
and Klein, Jacques
and Le Traon, Yves",
editor="Sottet, Jean-S{\'e}bastien
and Garc{\'i}a Frey, Alfonso
and Vanderdonckt, Jean",
title="Variability Management and Assessment for User Interface Design",
bookTitle="Human Centered Software Product Lines",
year="2017",
publisher="Springer International Publishing",
address="Cham",
pages="81--106",
abstract="User Interface (UI) design remains an open, wicked, complex and multi-faceted problem, owing to the ever increasing variability of design options resulting from multiple contexts of use, i.e., various end-users, heterogeneous devices and computing platforms, as well as their varying environments. Designing multiple UIs for multiple contexts of use inevitably requires an ever growing amount of time and resources that not all organizations are able to afford. Moreover, UI design choices stand on end-users' needs elicitation, which are recognized to be difficult to evaluate precisely upfront and which require iterative design cycles. All this complex variability should be managed efficiently to maintain time and resources to an acceptable level. To address these challenges, this article proposes a variability management approach integrated into a UI rapid prototyping process, which involves the combination of Model-Driven Engineering, Software Product Lines and Interactive Genetic Algorithms.",
isbn="978-3-319-60947-8",
doi="10.1007/978-3-319-60947-8_3",
url="https://doi.org/10.1007/978-3-319-60947-8_3"
}




@InProceedings{mod_ui_book,
author="Pleu{\ss}, Andreas",
editor="Briand, Lionel
and Williams, Clay",
title="Modeling the User Interface of Multimedia Applications",
booktitle="Model Driven Engineering Languages and Systems",
year="2005",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="676--690",
abstract="Multimedia applications are a branch of software development with growing importance. Typical application areas are training applications and simulations, infotainment systems -- e.g. in cars -- or computer games. However, there is still a lack of tailored concepts for a structured development of this kind of application. The current paper proposes a modeling approach for the user interface of multimedia applications with the goal of a model-driven development. We identify the special properties of multimedia application development and the resulting aspects to be covered by the user interface model. Existing conventional user interface modeling approaches are not sufficient, as they do not cover the media-specific aspects of the application. However, a multimedia application usually includes conventional user interface elements as well. Thus, we first propose a solution for the media-specific part. Second, we elaborate an integration of our approach with existing conventional approaches. Finally, we discuss the overall model-driven development approach and outline its benefits.",
isbn="978-3-540-32057-9"
}

@online{gui_layout,
  author = {Regula Stopper, Rene Sieber},
  title = {{Graphical User Interface} Layout and Design},
  year = 2012,
  url = {http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.527.6895&rep=rep1&type=pdf},
  urldate = {2012-01-26}
}



